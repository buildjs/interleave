#!/usr/bin/env node

var interleave = require('../lib/interleave'),
	fs = require('fs'),
	path = require('path'),
	program = require('commander');
	
function progInit() {
	program
	    .usage('[options] target1.js [target2.js] ..')
	    .option('-p, --path [path]', 'Target output path (default to current directory)')
	    .option('-a, --after [processors]', 'The list of post processors that should be run after interleaving the input files')
	    .option('-o, --output [targetFile]', 'The target file that will be written to if concatenating (default: dist.js)')
	    .option('--flags <flags>', 'Define flags that will be recognised within @if macros')
	    .option('--concat', 'Flag that the output files should be concatenated into a single dist.js file')
	    .option('--package', 'Set this flag to package the built files into amd, cjs, etc variants in the packages path')
	    .option('--lint', 'Run JSHint on the generated files')
	    .option('--watch', 'Watch files for changes and automatically recompile')
	    .parse(process.argv);
	
	var interleaver = interleave(program.args, program);
	if (typeof interleaver == 'string') {
		process.stdout.write('  ' + interleaver + '\n');
		program.emit('help');
	} // if
} // progInit
	
fs.readFile(path.join(__dirname, '../package.json'), 'utf8', function(err, contents) {
	if (! err) {
		var packageData = JSON.parse(contents);
		
		program.version(packageData.version);
	} // if

	progInit();
});